import { DefaultCacheFactory } from "./default-cache.factory";
import { getConfig } from '../bfast';
export function cacheAdapter(appName) {
    var _a, _b, _c;
    var config = getConfig();
    var credentials = config.credential(appName);
    var adapters = credentials === null || credentials === void 0 ? void 0 : credentials.adapters;
    if (adapters && adapters.cache && typeof adapters.cache === "function") {
        return adapters.cache();
    }
    else if (adapters && adapters.cache
        && typeof adapters.cache === 'string'
        && config.credential(adapters.cache)
        && config.credential(adapters.cache).adapters
        && ((_a = config.credential(adapters.cache).adapters) === null || _a === void 0 ? void 0 : _a.cache)
        && typeof ((_b = config.credential(adapters.cache).adapters) === null || _b === void 0 ? void 0 : _b.cache) === "function") {
        var _adapters = (_c = config.credential(adapters.cache)) === null || _c === void 0 ? void 0 : _c.adapters;
        // @ts-ignore
        return _adapters.cache();
    }
    else {
        return new DefaultCacheFactory();
    }
}
