var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
import { isBrowser, isElectron, isWebWorker } from "../utils/platform.util";
import { Dexie } from "dexie";
// @ts-ignore
import * as sha1 from "js-sha1";
var DefaultCacheFactory = /** @class */ (function () {
    function DefaultCacheFactory() {
    }
    DefaultCacheFactory.prototype.getAll = function (database, collection) {
        return __awaiter(this, void 0, void 0, function () {
            var _this = this;
            return __generator(this, function (_a) {
                if (isElectron || isBrowser || isWebWorker) {
                    return [2 /*return*/, this.withDexie(database, collection, function (table1) { return __awaiter(_this, void 0, void 0, function () {
                            return __generator(this, function (_a) {
                                // const keys = await this.keys(database, collection);
                                return [2 /*return*/, table1.toCollection().toArray()];
                            });
                        }); })];
                }
                return [2 /*return*/, []];
            });
        });
    };
    DefaultCacheFactory.prototype.withDexie = function (dbname, collection, fn) {
        return __awaiter(this, void 0, void 0, function () {
            var database, db, _a;
            var _b;
            return __generator(this, function (_c) {
                switch (_c.label) {
                    case 0:
                        if (!(isElectron || isBrowser || isWebWorker)) return [3 /*break*/, 5];
                        database = dbname + collection;
                        _a = Dexie.bind;
                        return [4 /*yield*/, sha1(database.trim())];
                    case 1:
                        db = new (_a.apply(Dexie, [void 0, _c.sent()]))();
                        db.version(1).stores((_b = {},
                            _b[collection] = "",
                            _b)).upgrade(function (_) {
                            console.log('index db upgraded');
                        });
                        _c.label = 2;
                    case 2:
                        _c.trys.push([2, , 4, 5]);
                        db.open();
                        return [4 /*yield*/, fn(db.table(collection))];
                    case 3: return [2 /*return*/, _c.sent()];
                    case 4:
                        db.close();
                        return [7 /*endfinally*/];
                    case 5: return [2 /*return*/, undefined];
                }
            });
        });
    };
    DefaultCacheFactory.prototype.keys = function (database, collection) {
        return __awaiter(this, void 0, void 0, function () {
            var _this = this;
            return __generator(this, function (_a) {
                if (isElectron || isBrowser || isWebWorker) {
                    return [2 /*return*/, this.withDexie(database, collection, function (table1) { return __awaiter(_this, void 0, void 0, function () {
                            var keys;
                            return __generator(this, function (_a) {
                                switch (_a.label) {
                                    case 0: return [4 /*yield*/, table1.toCollection().keys()];
                                    case 1:
                                        keys = _a.sent();
                                        if (Array.isArray(keys)) {
                                            return [2 /*return*/, keys];
                                        }
                                        else {
                                            return [2 /*return*/, []];
                                        }
                                        return [2 /*return*/];
                                }
                            });
                        }); })];
                }
                return [2 /*return*/, []];
            });
        });
    };
    DefaultCacheFactory.prototype.clearAll = function (database, collection) {
        return __awaiter(this, void 0, void 0, function () {
            var _this = this;
            return __generator(this, function (_a) {
                if (isElectron || isBrowser || isWebWorker) {
                    return [2 /*return*/, this.withDexie(database, collection, function (table1) { return __awaiter(_this, void 0, void 0, function () {
                            return __generator(this, function (_a) {
                                switch (_a.label) {
                                    case 0: return [4 /*yield*/, table1.clear()];
                                    case 1:
                                        _a.sent();
                                        return [2 /*return*/, true];
                                }
                            });
                        }); })];
                }
                return [2 /*return*/, true];
            });
        });
    };
    DefaultCacheFactory.prototype.get = function (key, database, collection) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                if (isElectron || isBrowser || isWebWorker) {
                    return [2 /*return*/, this.withDexie(database, collection, function (table1) {
                            return table1.get(key);
                        })];
                }
                return [2 /*return*/, null];
            });
        });
    };
    DefaultCacheFactory.prototype.getBulk = function (keys, database, collection) {
        return __awaiter(this, void 0, void 0, function () {
            var _this = this;
            return __generator(this, function (_a) {
                if (isElectron || isBrowser || isWebWorker) {
                    return [2 /*return*/, this.withDexie(database, collection, function (table1) { return __awaiter(_this, void 0, void 0, function () {
                            return __generator(this, function (_a) {
                                switch (_a.label) {
                                    case 0:
                                        if (!Array.isArray(keys)) return [3 /*break*/, 2];
                                        return [4 /*yield*/, table1.bulkGet(keys)];
                                    case 1: return [2 /*return*/, _a.sent()];
                                    case 2: return [2 /*return*/, []];
                                }
                            });
                        }); })];
                }
                return [2 /*return*/, []];
            });
        });
    };
    DefaultCacheFactory.prototype.set = function (key, data, database, collection, options) {
        if (options === void 0) { options = { secure: false }; }
        return __awaiter(this, void 0, void 0, function () {
            var _this = this;
            return __generator(this, function (_a) {
                if (isElectron || isBrowser || isWebWorker) {
                    return [2 /*return*/, this.withDexie(database, collection, function (table1) { return __awaiter(_this, void 0, void 0, function () {
                            return __generator(this, function (_a) {
                                switch (_a.label) {
                                    case 0: return [4 /*yield*/, (table1 === null || table1 === void 0 ? void 0 : table1.put(data, key))];
                                    case 1:
                                        _a.sent();
                                        return [2 /*return*/, data];
                                }
                            });
                        }); })];
                }
                return [2 /*return*/, null];
            });
        });
    };
    DefaultCacheFactory.prototype.setBulk = function (keys, data, database, collection) {
        return __awaiter(this, void 0, void 0, function () {
            var _this = this;
            return __generator(this, function (_a) {
                if (isElectron || isBrowser || isWebWorker) {
                    return [2 /*return*/, this.withDexie(database, collection, function (table1) { return __awaiter(_this, void 0, void 0, function () {
                            return __generator(this, function (_a) {
                                switch (_a.label) {
                                    case 0: return [4 /*yield*/, (table1 === null || table1 === void 0 ? void 0 : table1.bulkPut(data, keys, { allKeys: true }))];
                                    case 1:
                                        _a.sent();
                                        return [2 /*return*/, keys];
                                }
                            });
                        }); })];
                }
                return [2 /*return*/, null];
            });
        });
    };
    DefaultCacheFactory.prototype.remove = function (key, database, collection, force) {
        if (force === void 0) { force = true; }
        return __awaiter(this, void 0, void 0, function () {
            var _this = this;
            return __generator(this, function (_a) {
                if (isElectron || isBrowser || isWebWorker) {
                    return [2 /*return*/, this.withDexie(database, collection, function (table1) { return __awaiter(_this, void 0, void 0, function () {
                            return __generator(this, function (_a) {
                                switch (_a.label) {
                                    case 0: return [4 /*yield*/, (table1 === null || table1 === void 0 ? void 0 : table1.delete(key))];
                                    case 1:
                                        _a.sent();
                                        return [2 /*return*/, true];
                                }
                            });
                        }); })];
                }
                return [2 /*return*/, true];
            });
        });
    };
    DefaultCacheFactory.prototype.cacheEnabled = function (appName, options) {
        return true;
    };
    return DefaultCacheFactory;
}());
export { DefaultCacheFactory };
