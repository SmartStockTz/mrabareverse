import { CacheAdapter } from "../adapters/cache.adapter";
import { RequestOptions } from "../controllers/query.controller";
import { Table } from "dexie";
export declare class DefaultCacheFactory implements CacheAdapter {
    constructor();
    getAll(database: string, collection: string): Promise<any[]>;
    withDexie(dbname: string, collection: string, fn: (table: Table) => Promise<any>): Promise<any>;
    keys(database: string, collection: string): Promise<string[]>;
    clearAll(database: string, collection: string): Promise<boolean>;
    get<T>(key: string, database: string, collection: string): Promise<T | null>;
    getBulk<T>(keys: string[], database: string, collection: string): Promise<T[]>;
    set(key: string, data: any, database: string, collection: string, options?: {
        dtl?: number;
        secure?: boolean;
    }): Promise<any>;
    setBulk(keys: string[], data: any[], database: string, collection: string): Promise<any>;
    remove(key: string, database: string, collection: string, force?: boolean): Promise<boolean>;
    cacheEnabled(appName: string, options?: RequestOptions): boolean;
}
