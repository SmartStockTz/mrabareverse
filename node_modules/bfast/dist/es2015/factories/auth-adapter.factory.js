import { DefaultAuthFactory } from "./default-auth.factory";
import { HttpClientController } from "../controllers/http-client.controller";
import { httpAdapter } from "./http-adapter.factory";
export function authAdapter(config, appName) {
    var _a, _b, _c, _d;
    const adapters = (_a = config.credential(appName)) === null || _a === void 0 ? void 0 : _a.adapters;
    if (adapters && adapters.auth && typeof adapters.auth === 'function') {
        return adapters.auth();
    }
    else if (adapters && adapters.auth
        && typeof adapters.auth === 'string'
        && config.credential(adapters.auth)
        && config.credential(adapters.auth).adapters
        && ((_b = config.credential(adapters.auth).adapters) === null || _b === void 0 ? void 0 : _b.auth)
        && typeof ((_c = config.credential(adapters.auth).adapters) === null || _c === void 0 ? void 0 : _c.auth) === "function") {
        const _adapters = (_d = config.credential(adapters.auth)) === null || _d === void 0 ? void 0 : _d.adapters;
        // @ts-ignore
        return _adapters.auth();
    }
    else {
        return new DefaultAuthFactory(new HttpClientController(appName, httpAdapter(config, appName)));
    }
}
