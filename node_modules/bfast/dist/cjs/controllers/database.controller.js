"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.DatabaseController = void 0;
var query_controller_1 = require("./query.controller");
var data_util_1 = require("../utils/data.util");
var aggregate_controller_1 = require("./aggregate.controller");
var bfast_1 = require("../bfast");
var DatabaseController = /** @class */ (function () {
    function DatabaseController(domainName, httpClientController, rulesController, authController, appName) {
        this.domainName = domainName;
        this.httpClientController = httpClientController;
        this.rulesController = rulesController;
        this.authController = authController;
        this.appName = appName;
    }
    DatabaseController.prototype.save = function (model, options) {
        return __awaiter(this, void 0, void 0, function () {
            var credential, createRule, response, _a, _b, _c;
            var _d;
            return __generator(this, function (_e) {
                switch (_e.label) {
                    case 0:
                        credential = (0, bfast_1.getConfig)().credential(this.appName);
                        return [4 /*yield*/, this.rulesController.createRule(this.domainName, model, credential, options)];
                    case 1:
                        createRule = _e.sent();
                        _b = (_a = this.httpClientController).post;
                        _c = ["" + (0, bfast_1.getConfig)().databaseURL(this.appName), createRule,
                            {
                                headers: {}
                            }];
                        _d = {
                            context: this.domainName,
                            rule: "create" + this.domainName,
                            type: 'daas'
                        };
                        return [4 /*yield*/, this.authController.getToken()];
                    case 2: return [4 /*yield*/, _b.apply(_a, _c.concat([(_d.token = _e.sent(),
                                _d)]))];
                    case 3:
                        response = _e.sent();
                        return [2 /*return*/, (0, data_util_1.extractResultFromServer)(response.data, 'create', this.domainName)];
                }
            });
        });
    };
    DatabaseController.prototype.getAll = function (query, options) {
        return __awaiter(this, void 0, void 0, function () {
            var totalCount, _a, e_1;
            return __generator(this, function (_b) {
                switch (_b.label) {
                    case 0:
                        _b.trys.push([0, 5, , 6]);
                        if (!(query && query.size)) return [3 /*break*/, 1];
                        _a = query.size;
                        return [3 /*break*/, 3];
                    case 1: return [4 /*yield*/, this.query().count(true).find(options)];
                    case 2:
                        _a = _b.sent();
                        _b.label = 3;
                    case 3:
                        totalCount = _a;
                        return [4 /*yield*/, this.query()
                                .skip(query && query.skip ? query.skip : 0)
                                .size(totalCount)
                                // .cids(query && query.cids ? query.cids : false)
                                .hashes(query && query.hashes ? query.hashes : [])
                                .find(options)];
                    case 4: return [2 /*return*/, _b.sent()];
                    case 5:
                        e_1 = _b.sent();
                        throw { message: DatabaseController._getErrorMessage(e_1 ? e_1 : 'unknown error') };
                    case 6: return [2 /*return*/];
                }
            });
        });
    };
    DatabaseController.prototype.get = function (id, 
    // cids = false,
    options) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                return [2 /*return*/, this.query()
                        .byId(id)
                        .hashes([])
                        // .cids(cids)
                        .find(options)];
            });
        });
    };
    DatabaseController.prototype.query = function () {
        return new query_controller_1.QueryController(this.domainName, this.httpClientController, this.rulesController, this.authController, this.appName);
    };
    DatabaseController.prototype.aggregate = function () {
        return new aggregate_controller_1.AggregateController(this.domainName, this.httpClientController, this.rulesController, this.authController, this.appName);
    };
    DatabaseController._getErrorMessage = function (e) {
        if (e.message) {
            return e.message;
        }
        else {
            return (e && e.response && e.response.data) ? e.response.data : e.toString();
        }
    };
    return DatabaseController;
}());
exports.DatabaseController = DatabaseController;
