"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.BFastConfig = void 0;
var BFastConfig = /** @class */ (function () {
    function BFastConfig() {
        this.DEFAULT_CACHE_DB_BFAST = '_BFast';
        this.DEFAULT_CACHE_COLLECTION_USER = '_User';
        this.DEFAULT_CACHE_COLLECTION_STORAGE = '_Storage';
        this.DEFAULT_CACHE_COLLECTION_REST = '_Rest';
        this.DEFAULT_CACHE_COLLECTION_CACHE = '_Cache';
        this.DEFAULT_CACHE_COLLECTION_TTL = '_Cache_Ttl';
        this.credentials = {};
    }
    BFastConfig.getInstance = function () {
        if (!BFastConfig.instance) {
            BFastConfig.instance = new BFastConfig();
        }
        return BFastConfig.instance;
    };
    BFastConfig.prototype.setCredential = function (config, appName) {
        if (appName === void 0) { appName = BFastConfig.DEFAULT_APP; }
        if (!BFastConfig.instance) {
            throw new Error("Call BFast.init() to initialize configurations first");
        }
        BFastConfig.instance.credentials[appName] = config;
    };
    BFastConfig.prototype.credential = function (appName) {
        if (appName === void 0) { appName = BFastConfig.DEFAULT_APP; }
        if (!this.credentials[appName]) {
            throw new Error("The app -> " + appName + " is not initialized");
        }
        return this.credentials[appName];
    };
    BFastConfig.prototype.functionsURL = function (path, appName) {
        var _a;
        if (path.startsWith('http')) {
            return path;
        }
        if (this.credentials[appName].functionsURL && ((_a = this.credentials[appName].functionsURL) === null || _a === void 0 ? void 0 : _a.startsWith('http'))) {
            return "" + this.credentials[appName].functionsURL + path;
        }
        return "https://" + this.credentials[appName].projectId + "-faas.bfast.fahamutech.com" + path;
    };
    ;
    BFastConfig.prototype.databaseURL = function (appName, suffix) {
        var _a;
        if (suffix === void 0) { suffix = '/v2'; }
        if (this.credentials[appName].databaseURL && ((_a = this.credentials[appName].databaseURL) === null || _a === void 0 ? void 0 : _a.startsWith('http'))) {
            if (suffix) {
                return this.credentials[appName].databaseURL + suffix;
            }
            else {
                return this.credentials[appName].databaseURL;
            }
        }
        if (suffix) {
            return "https://" + this.credential(appName).projectId + "-daas.bfast.fahamutech.com" + suffix;
        }
        else {
            return "https://" + this.credential(appName).projectId + "-daas.bfast.fahamutech.com";
        }
    };
    ;
    BFastConfig.prototype.databaseWsURL = function (appName, suffix) {
        if (suffix === void 0) { suffix = '/v2'; }
        var dbUrl = this.credentials[appName].databaseURL && this.credentials[appName].databaseURL;
        if (dbUrl === null || dbUrl === void 0 ? void 0 : dbUrl.startsWith('https:')) {
            var url = this.credentials[appName].databaseURL;
            // @ts-ignore
            url = url.replace('https:', 'wss:');
            if (suffix) {
                return url + suffix;
            }
            else {
                return url;
            }
        }
        if (dbUrl === null || dbUrl === void 0 ? void 0 : dbUrl.startsWith('http:')) {
            var url = this.credentials[appName].databaseURL;
            // @ts-ignore
            url = url.replace('http:', 'ws:');
            if (suffix) {
                return url + suffix;
            }
            else {
                return url;
            }
        }
        if (suffix) {
            return "wss://" + this.credential(appName).projectId + "-daas.bfast.fahamutech.com" + suffix;
        }
        else {
            return "wss://" + this.credential(appName).projectId + "-daas.bfast.fahamutech.com";
        }
    };
    ;
    BFastConfig.prototype.cacheDatabaseName = function (name, appName) {
        var _a;
        var adapters = (_a = this.credential(appName)) === null || _a === void 0 ? void 0 : _a.adapters;
        var projectId = this.credential(appName).projectId;
        if (adapters
            && adapters.cache
            && typeof adapters.cache === 'string'
            && this.credential(adapters.cache)
            && this.credential(adapters.cache).projectId) {
            projectId = this.credential(adapters.cache).projectId;
            appName = adapters.cache;
        }
        // } else if (adapters
        //     && adapters.auth
        //     && typeof adapters.auth === 'string'
        //     && this.credential(adapters.auth)
        //     && this.credential(adapters.auth).projectId) {
        //     projectId = this.credential(adapters.auth).projectId;
        //     appName = adapters.auth;
        // } else if (adapters
        //     && adapters.http
        //     && typeof adapters.http === 'string'
        //     && this.credential(adapters.http)
        //     && this.credential(adapters.http).projectId) {
        //     projectId = this.credential(adapters.http).projectId;
        //     appName = adapters.http;
        // }
        if (name && name !== '') {
            return "bfast_" + projectId + "_" + appName + "_" + name;
        }
        else {
            return "bfast_" + projectId + "_" + appName;
        }
    };
    BFastConfig.prototype.cacheCollectionName = function (name, appName) {
        if (name && name !== '') {
            return name.trim();
        }
        else {
            return this.DEFAULT_CACHE_COLLECTION_CACHE;
        }
    };
    BFastConfig.DEFAULT_APP = 'DEFAULT';
    return BFastConfig;
}());
exports.BFastConfig = BFastConfig;
