"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.removeAllSyncs = exports.removeOneSyncs = exports.getOneSyncs = exports.getAllSyncs = exports.getSyncsKeys = exports.addSyncs = void 0;
var constant_util_1 = require("./constant.util");
// @ts-ignore
var sha1 = __importStar(require("js-sha1"));
// export function set(
//     value: { id: string, [key: string]: any }, yMap: YMap<any> | undefined
// ): { s: boolean, m: string, r: string } {
//     if (!yMap || !value) {
//         return {
//             s: false,
//             m: 'one of parameter is null',
//             r: 'no',
//         };
//     }
//     if (value._created_at && typeof value._created_at === "string") {
//         value.createdAt = value._created_at;
//         delete value._created_at;
//     }
//     if (value._updated_at && typeof value._updated_at === "string") {
//         value.updatedAt = value._updated_at;
//         delete value._updated_at;
//     }
//     if (typeof value?.createdAt === "object") {
//         value.createdAt = '2020-09-01';
//     }
//     if (typeof value?.updatedAt === "object") {
//         value.updatedAt = '2020-09-01';
//     }
//     if (!value.hasOwnProperty('createdAt')) {
//         value.createdAt = new Date()
//     }
//     if (!value.hasOwnProperty('updatedAt')) {
//         value.updatedAt = new Date()
//     }
//     if (value.hasOwnProperty('id')) {
//         yMap.set(value.id, value);
//         return {
//             m: 'done',
//             s: true,
//             r: 'Ok'
//         }
//     } else {
//         return {
//             s: false,
//             m: 'please doc must have id field',
//             r: JSON.stringify(value, null, 4)
//         };
//         // throw {message: 'please doc must have id/_id field', data: JSON.stringify(value, null, 4)};
//     }
// }
function addSyncs(data, database, cacheAdapter) {
    var _a;
    return __awaiter(this, void 0, void 0, function () {
        var _sha1;
        return __generator(this, function (_b) {
            switch (_b.label) {
                case 0:
                    if (!((_a = data === null || data === void 0 ? void 0 : data.payload) === null || _a === void 0 ? void 0 : _a.hasOwnProperty('id'))) {
                        console.log('can not add data for syncs it does not have id field');
                        return [2 /*return*/, null];
                    }
                    return [4 /*yield*/, sha1(JSON.stringify(data))];
                case 1:
                    _sha1 = _b.sent();
                    return [2 /*return*/, cacheAdapter.set(_sha1, data, database, constant_util_1.ConstantUtil.SYNCS_TABLE)];
            }
        });
    });
}
exports.addSyncs = addSyncs;
function getSyncsKeys(database, cacheAdapter) {
    return __awaiter(this, void 0, void 0, function () {
        return __generator(this, function (_a) {
            return [2 /*return*/, cacheAdapter.keys(database, constant_util_1.ConstantUtil.SYNCS_TABLE)];
        });
    });
}
exports.getSyncsKeys = getSyncsKeys;
function getAllSyncs(database, cacheAdapter) {
    return __awaiter(this, void 0, void 0, function () {
        return __generator(this, function (_a) {
            return [2 /*return*/, cacheAdapter.getAll(database, constant_util_1.ConstantUtil.SYNCS_TABLE)];
        });
    });
}
exports.getAllSyncs = getAllSyncs;
function getOneSyncs(database, key, cacheAdapter) {
    return __awaiter(this, void 0, void 0, function () {
        return __generator(this, function (_a) {
            switch (_a.label) {
                case 0: return [4 /*yield*/, cacheAdapter.get(key, database, constant_util_1.ConstantUtil.SYNCS_TABLE)];
                case 1: return [2 /*return*/, _a.sent()];
            }
        });
    });
}
exports.getOneSyncs = getOneSyncs;
function removeOneSyncs(key, database, cacheAdapter) {
    return __awaiter(this, void 0, void 0, function () {
        return __generator(this, function (_a) {
            return [2 /*return*/, cacheAdapter.remove(key, database, constant_util_1.ConstantUtil.SYNCS_TABLE)];
        });
    });
}
exports.removeOneSyncs = removeOneSyncs;
function removeAllSyncs(database, cacheAdapter) {
    return __awaiter(this, void 0, void 0, function () {
        return __generator(this, function (_a) {
            return [2 /*return*/, cacheAdapter.clearAll(database, constant_util_1.ConstantUtil.SYNCS_TABLE)];
        });
    });
}
exports.removeAllSyncs = removeAllSyncs;
